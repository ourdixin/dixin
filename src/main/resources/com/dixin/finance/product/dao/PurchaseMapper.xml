<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dixin.finance.product.dao.PurchaseMapper">

  <!--  cache /  如果加缓存的话，手动改动数据后就不会显示了 -->
	<resultMap  id="productResult" type="com.dixin.finance.product.vo.ProductVO">
		<id column="id" property="id"/>
		<result column="code" property="code"/>
		<result column="name" property="name"/>
		<result column="release_date" property="releaseDate"/>
		<result column="end_date" property="endDate"/>
		<result column="b_delay" property="bDelay"/>
		<result column="delay_condition" property="delayCondition"/>
		<result column="delay_term" property="delayTerm"/>
		<result column="delay_term_unit" property="delayTermUnit"/>
		<result column="term" property="term"/>
		<result column="term_unit" property="termUnit"/>
		<result column="append_term" property="appendTerm"/>
		<result column="append_term_unit" property="appendTermUnit"/>
		<result column="part_a" property="partA"/>
		<result column="part_b" property="partB"/>
		<result column="part_c" property="partC"/>
		<result column="part_d" property="partD"/>
		<result column="rate_a" property="rateA"/>
		<result column="rate_b" property="rateB"/>
		<result column="rate_c" property="rateC"/>
		<result column="rate_d" property="rateD"/>
		<result column="rate_note" property="rateNote"/>		
		<result column="amount" property="amount"/>
		<result column="min_amount" property="minAmount"/>
		<result column="append_amount" property="appendAmount"/>
		<result column="pay_type" property="payType"/>
		<result column="pay_type_info" property="payTypeInfo"/>
		<result column="ad_file" property="adFile"/>
		<result column="guide_file" property="guideFile"/>
		<result column="star" property="star"/>
		<result column="catogry_id" property="catogryId"/>
		<result column="profit_id" property="profitId"/>
		<result column="bonus_type" property="bonusType"/>
		<result column="direction" property="direction"/>
		<result column="buy_fee" property="buyFee"/>
		<result column="close_term" property="closeTerm"/>
		<result column="close_term_unit" property="closeTermUnit"/>
		<result column="fund_manager" property="fundManager"/>
		<result column="fund_manager_url" property="fundManagerUrl"/>
		<result column="manage_fee" property="manageFee"/>
		<result column="open_day" property="openDay"/>
		<result column="bonus" property="bonus"/>
		<result column="sell_fee" property="sellFee"/>
		<result column="status" property="status"/>
		<result column="info" property="info"/>
		<result column="view_num" property="viewNum"/>
		<result column="down_num" property="downNum"/>
		<result column="reservation_num" property="reservationNum"/>
		<result column="recommend" property="recommend"/>
		<result column="ad_file" property="adFile"/>
		<result column="guide_file" property="guideFile"/>
		<result column="value_date" property="valueDate"/>
		<result column="due_date" property="dueDate"/>
		<result column="unit_net" property="unitNet"/>
		<result column="total_value" property="totalValue"/>
		<result column="create_user" property="createUser"/>
		<result column="create_time" property="createTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	
	<resultMap id="PurchaseResult" type="com.dixin.finance.product.vo.PurchaseVO">
		<id column="purchaseId" property="id"/>
		<result column="userId" property="userId"/>  
		<result column="buyDate" property="buyDate"/>
		<result column="volume" property="volume"/>  
		<result column="purchaseAmount" property="amount"/>  
		<result column="institutionId" property="institutionId"/>  
		<result column="pnl" property="pnl"/>
		<result column="hasReceipt" property="hasReceipt"/>
		<result column="purchase_status" property="status"/>
		<result column="createUser" property="createUser"/>
		<result column="createTime" property="createTime"/>
		<result column="updateUser" property="updateUser"/>
		<result column="updateTime" property="updateTime"/>
		<association property="product" column="productId" resultMap="productResult"/>
	</resultMap>  

	
  <select id="queryPurchaseList" parameterType="map" resultMap="PurchaseResult" resultType="com.dixin.finance.product.vo.PurchaseVO" useCache="false" >
		select 
			purchase.id purchaseId
			,purchase.user_id userId
			,purchase.product_id productId
			,purchase.buy_date buyDate
			,purchase.volume volume
			,purchase.amount purchaseAmount
			,purchase.institution_id institutionId
			,purchase.pnl pnl
			,purchase.has_receipt hasReceipt
			,purchase.status purchase_status
			,purchase.create_user createUser
			,purchase.create_time createTime
			,purchase.update_user updateUser
			,purchase.update_time updateTime
			,product.id
			,product.name
			,product.code
			,product.release_date
			,product.end_date
			,product.b_delay
			,product.delay_condition
			,product.delay_term
			,product.delay_term_unit
			,product.term
			,product.term_unit
			,product.append_term
			,product.append_term_unit
			,product.part_a
			,product.rate_a
			,product.part_b
			,product.rate_b
			,product.part_c
			,product.rate_c
			,product.part_d
			,product.rate_d
			,product.rate_note
			,product.amount
			,product.min_amount
			,product.append_amount
			,product.pay_type
			,product.pay_type_info
			,product.star
			,product.catogry_id
			,product.direction
			,product.buy_fee
			,product.close_term
			,product.close_term_unit
			,product.fund_manager
			,product.fund_manager_url
			,product.manage_fee
			,product.open_day
			,product.bonus
			,product.sell_fee
			,product.status
			,product.info
			,product.view_num
			,product.down_num
			,product.reservation_num
			,product.ad_file
			,product.guide_file
			,product.profit_id
			,product.bonus_type
			,product.value_date
			,product.due_date
			,product.unit_net
			,product.total_value
			,product.recommend	
			,product.create_user
			,product.create_time
			,product.update_user
			,product.update_time
		from purchase 
		join product on purchase.product_id = product.id
		WHERE 1 
		<if test="userId != null and userId != -1">  
            <![CDATA[  
               and purchase.user_id = #{userId} 
            ]]>  
        </if> 				
		<if test="profitType != null and profitType != -1">  
            <![CDATA[  
               and product.profit_id = #{profitType} 
            ]]>  
        </if> 
		<if test="productId != null and productId != -1">  
            <![CDATA[  
               and purchase.product_id = #{productId} 
            ]]>  
        </if> 	
		<if test="status == 0">  
            <![CDATA[  
               and (product.due_date < '2100-01-01' and curdate() <= date(product.due_date))
            ]]>
        </if>
		<if test="status == 1">  
            <![CDATA[  
               and (purchase.status = 111 or purchase.status = 112 ) 
            ]]> 
        </if>
		<if test="status != null and status != -1 and status != 0 and status != 1 ">  
            <![CDATA[  
               and purchase.status = #{status} 
            ]]> 
        </if>
        
		order by purchase.buy_date desc
  </select>
  
  <select id="queryPurchaseProductList" parameterType="map" resultMap="PurchaseResult" resultType="com.dixin.finance.product.vo.PurchaseVO" useCache="false" >
		select 
			purchase.id purchaseId
			,purchase.user_id userId
			,purchase.product_id productId
			,purchase.buy_date buyDate
			,sum(purchase.volume) volume
			,purchase.amount purchaseAmount
			,purchase.institution_id institutionId
			,purchase.pnl pnl
			,purchase.has_receipt hasReceipt
			,purchase.status purchase_status
			,purchase.create_user createUser
			,purchase.create_time createTime
			,purchase.update_user updateUser
			,purchase.update_time updateTime
			,product.id
			,product.name
			,product.code
			,product.release_date
			,product.end_date
			,product.b_delay
			,product.delay_condition
			,product.delay_term
			,product.delay_term_unit
			,product.term
			,product.term_unit
			,product.append_term
			,product.append_term_unit
			,product.part_a
			,product.rate_a
			,product.part_b
			,product.rate_b
			,product.part_c
			,product.rate_c
			,product.part_d
			,product.rate_d
			,product.rate_note
			,product.amount
			,product.min_amount
			,product.append_amount
			,product.pay_type
			,product.pay_type_info
			,product.star
			,product.catogry_id
			,product.direction
			,product.buy_fee
			,product.close_term
			,product.close_term_unit
			,product.fund_manager
			,product.fund_manager_url
			,product.manage_fee
			,product.open_day
			,product.bonus
			,product.sell_fee
			,product.status
			,product.info
			,product.view_num
			,product.down_num
			,product.reservation_num
			,product.ad_file
			,product.guide_file
			,product.profit_id
			,product.bonus_type
			,product.value_date
			,product.due_date
			,product.unit_net
			,product.total_value
			,product.recommend
			,product.create_user
			,product.create_time
			,product.update_user
			,product.update_time
		from purchase 
		join product on purchase.product_id = product.id
		WHERE 1 
		<if test="userId != null and userId != -1">  
            <![CDATA[  
               and purchase.user_id = #{userId} 
            ]]>  
        </if> 				
		<if test="profitType != null and profitType != -1">  
            <![CDATA[  
               and product.profit_id = #{profitType} 
            ]]>  
        </if> 
		<if test="productId != null and productId != -1">  
            <![CDATA[  
               and purchase.product_id = #{productId} 
            ]]>  
        </if> 	
		<if test="status == 0">  
            <![CDATA[  
               and purchase.status = 110 
            ]]>
        </if>
		<if test="status == 1">  
            <![CDATA[  
               and (purchase.status = 111 or purchase.status = 112 ) 
            ]]> 
        </if>
		<if test="status != null and status != -1 and status != 0 and status != 1 ">  
            <![CDATA[  
               and purchase.status = #{status} 
            ]]> 
        </if>
        
        group by purchase.product_id
        <if test="status == -1"> 
        	<![CDATA[  
        		having sum(purchase.volume) > 0
        	]]> 
        </if>
        
        <if test="status == 1"> 
        	<![CDATA[  
        		having sum(purchase.volume) == 0
        	]]> 
        </if>
        
		order by purchase.buy_date desc
  </select>
  	
	<resultMap id="PurchaseStatistics" type="com.dixin.finance.product.vo.PurchaseStatisticsVO">
		<id column="id" property="productId"/>
		<result column="purchasevolume" property="volume"/>  
		<result column="purchaseamount" property="amount"/> 
		<result column="usernum" property="userNum"/> 
		<association property="product" column="id" resultMap="productResult"/>
	</resultMap>  
	
  <select id="queryPurchaseStatistics" resultMap="PurchaseStatistics" resultType="com.dixin.finance.product.vo.PurchaseStatisticsVO" useCache="false" >
		SELECT 
			count(purchase.user_id) as usernum,
			sum(purchase.volume) as purchasevolume,
			sum(purchase.amount) as purchaseamount,
			product.*
		FROM purchase join product on purchase.product_id= product.id  
		group by product.id 
		order by product.due_date 
  </select>
  
  <select id="queryHotPurchaseStatistics" resultMap="PurchaseStatistics" resultType="com.dixin.finance.product.vo.PurchaseStatisticsVO" useCache="false" >
		SELECT 
			count(purchase.user_id) as usernum,
			sum(purchase.volume) as purchasevolume,
			sum(purchase.amount) as purchaseamount,
			product.* 
		FROM purchase join product on 
		<![CDATA[ 
		(purchase.product_id = product.id and datediff(product.due_date,date(now())) <= 7 ) 
		]]> 
		group by product.id 
		order by product.due_date 
  </select>
  
	<resultMap id="userResult" type="com.dixin.finance.authentication.vo.UserVO">  
		<id column="uid" property="id"/>
		<result column="user_name" property="userName"/>
		<result column="password" property="password"/>
		<result column="user_type" property="userType"/>
		<result column="name" property="name"/>
		<result column="mobile" property="mobile"/>
		<result column="address" property="address"/>
		<result column="zip_code" property="zipCode"/>
		<result column="qq" property="qq"/>
		<result column="account" property="account"/>
		<result column="start_date" property="startDate"/>
		<result column="term" property="term"/>
		<result column="is_risk_tested" property="isRiskTested"/>
		<result column="update_user" property="updateUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="institution_id" property="institutionId" /> 
		<result column="area_id" property="areaId" />  
	</resultMap>  
	<resultMap id="PurchaseDetails" type="com.dixin.finance.product.vo.PurchaseVO">
		<id column="Id" property="id"/>
		<result column="user_id" property="userId"/>  
		<result column="product_id" property="productId"/>
		<result column="buy_date" property="buyDate"/>
		<result column="volume" property="volume"/>  
		<result column="amount" property="amount"/>  
		<result column="institution_id" property="institutionId"/>  
		<result column="pnl" property="pnl"/>
		<result column="has_receipt" property="hasReceipt"/>
		<result column="status" property="status"/>
		<result column="create_user" property="createUser"/>
		<result column="create_time" property="createTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="update_time" property="updateTime"/>
		<association property="user" column="id" resultMap="userResult"/>
	</resultMap> 
	
  <select id="queryPurchaseDetails" parameterType="int" resultMap="PurchaseDetails" resultType="com.dixin.finance.product.vo.PurchaseVO" useCache="false" >
		SELECT purchase.id as Id , 
		purchase.*,
		user.*
		FROM `purchase` left join user on purchase.user_id=user.id
		WHERE purchase.product_id=#{productId}
		order by purchase.buy_date desc 
  </select>


  <select id="queryPurchase" parameterType="int" resultMap="PurchaseResult" resultType="com.dixin.finance.product.vo.PurchaseVO" useCache="false" >
		select purchase.id purchaseId,
			purchase.user_id userId,
			purchase.buy_date buyDate,
			purchase.product_id productId,
			purchase.volume volume,
			purchase.amount purchaseAmount,
			purchase.institution_id institutionId,
			purchase.pnl pnl,
			purchase.has_receipt hasReceipt,
			purchase.status status,
			purchase.create_user createUser, 
			purchase.create_time createTime, 
			purchase.update_user updateUser, 
			purchase.update_time updateTime
			,product.id
			,product.name
			,product.code
			,product.release_date
			,product.end_date
			,product.b_delay
			,product.delay_condition
			,product.delay_term
			,product.delay_term_unit
			,product.term
			,product.term_unit
			,product.append_term
			,product.append_term_unit
			,product.part_a
			,product.rate_a
			,product.part_b
			,product.rate_b
			,product.part_c
			,product.rate_c
			,product.part_d
			,product.rate_d
			,product.rate_note
			,product.amount
			,product.min_amount
			,product.append_amount
			,product.pay_type
			,product.pay_type_info
			,product.star
			,product.catogry_id
			,product.direction
			,product.buy_fee
			,product.close_term
			,product.close_term_unit
			,product.fund_manager
			,product.fund_manager_url
			,product.manage_fee
			,product.open_day
			,product.bonus
			,product.sell_fee
			,product.status
			,product.info
			,product.view_num
			,product.down_num
			,product.reservation_num
			,product.ad_file
			,product.guide_file
			,product.profit_id
			,product.bonus_type
			,product.value_date
			,product.due_date
			,product.unit_net
			,product.total_value
			,product.recommend
			,product.create_user
			,product.create_time
			,product.update_user
			,product.update_time
		from purchase
		join product on purchase.product_id = product.id
			WHERE purchase.id=#{Id} 
	</select>

	
  <insert id="addPurchase" parameterType="com.dixin.finance.product.vo.PurchaseVO" useGeneratedKeys = "true" keyProperty = "id" >
    insert into purchase(
		user_id,
		buy_date,
		product_id,
		volume,
		amount,
		institution_id,
		pnl,
		has_receipt,
		status,
		create_user,
		create_time,
		update_user,
		update_time)
	values(
		#{userId},
		#{buyDate},
		#{productId},
		#{volume},	
		#{amount},
		#{institutionId},
		#{pnl},
		#{hasReceipt},
		#{status},
		0,
		SYSDATE(),
		0,
		SYSDATE()
	)
  </insert>	
	
	
</mapper>
